<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[微信小程序 IView List与Icon结合使用]]></title>
    <url>%2F2019%2F10%2F17%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-IView-List%E4%B8%8EIcon%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[slot wxml123456789101112131415161718192021222324252627&lt;i-cell-group&gt; &lt;i-cell title=&quot;测试&quot; is-link&gt; &lt;i-icon slot=&quot;icon&quot; type=&quot;feedback&quot; size=&quot;28&quot; color=&quot;#80848f&quot; /&gt; &lt;/i-cell&gt; &lt;i-cell title=&quot;测试&quot; is-link url=&quot;../../pages/dashboard/index&quot;&gt; &lt;i-icon slot=&quot;icon&quot; type=&quot;activity&quot; size=&quot;28&quot; color=&quot;#80848f&quot; /&gt; &lt;/i-cell&gt; &lt;i-cell title=&quot;测试&quot; is-link url=&quot;../../pages/dashboard/index&quot;&gt; &lt;i-icon slot=&quot;icon&quot; type=&quot;collection&quot; size=&quot;28&quot; color=&quot;#80848f&quot; /&gt; &lt;/i-cell&gt; &lt;i-cell title=&quot;测试&quot; is-link url=&quot;../../pages/dashboard/index&quot;&gt; &lt;i-icon slot=&quot;icon&quot; type=&quot;coordinates&quot; size=&quot;28&quot; color=&quot;#80848f&quot; /&gt; &lt;/i-cell&gt;&lt;/i-cell-group&gt; 页面效果 在里面嵌套 要注意slot属性，关于list与icon的详细用法 https://weapp.iviewui.com/docs/guide/start]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LuckinCoffe咖啡小程序-菜单-左右联动]]></title>
    <url>%2F2019%2F10%2F16%2FLuckinCoffe%E5%92%96%E5%95%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%8F%9C%E5%8D%95-%E5%B7%A6%E5%8F%B3%E8%81%94%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[左侧是商品列表名称,通过点击左侧不同 index ,右侧出现不同 index 对应的 goods列表同时右侧进行滑动,左侧也可以跳转到不同的激活样式&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注:index 为商品对应的下标索引模拟数据使用自己创建的 mock 数据, 在 utils 文件夹下创建, 使用封装的 ajax 调接口, 在 buy.js中 使用 require 引入 ajax即可 buy.wxml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061&lt;!--pages/buy/buy.wxml--&gt;&lt;!-- changelocation --&gt;&lt;view bindtap=&quot;&quot; class=&quot;header&quot;&gt; &lt;view class=&quot;position&quot;&gt; &lt;view class=&quot;iconfont icon-locationicon&quot;&gt;&lt;/view&gt; &lt;view class=&quot;location&quot;&gt; &lt;view&gt;&#123;&#123;myaddress.name&#125;&#125;&lt;/view&gt; &lt;view class=&quot;mi&quot;&gt;&#123;&#123;myaddress.distance&#125;&#125;m&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;switch&quot; bindtap=&quot;changwuliutype&quot;&gt; &lt;view class=&quot;&#123;&#123;isZiti?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot;&gt;自提&lt;/view&gt; &lt;view class=&quot;&#123;&#123;!isZiti?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot;&gt;外卖&lt;/view&gt; &lt;/view&gt;&lt;/view&gt;&lt;view class=&quot;banner&quot;&gt; &lt;image mode=&quot;top&quot; src=&quot;https://n.sinaimg.cn/sinacn20190717s/75/w560h315/20190717/024b-hzxsvnp0762431.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt;&lt;view class=&quot;container&quot;&gt; &lt;!-- 左侧商品 --&gt; &lt;scroll-view class=&quot;menu-left&quot; scroll-y scroll-with-animation=&quot;true&quot; scroll-top=&quot;&#123;&#123;leftMenuTop&#125;&#125;&quot;&gt; &lt;view data-index=&quot;&#123;&#123;index&#125;&#125;&quot; catchtap=&quot;changtype&quot; class=&quot;menu-left-buy &#123;&#123;activeType===index?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; id=&apos;&#123;&#123;index&#125;&#125;&apos; wx:for=&quot;&#123;&#123;menulist&#125;&#125;&quot;&gt; &#123;&#123;item.name&#125;&#125; &lt;view class=&quot;tip&quot;&gt;&#123;&#123;item.tip&#125;&#125;&lt;/view&gt; &lt;/view&gt; &lt;/scroll-view&gt; &lt;!-- 右侧滚动商品 --&gt; &lt;scroll-view class=&quot;menu-right&quot; scroll-y scroll-top=&quot;&#123;&#123;rightProTop&#125;&#125;&quot; bindscroll=&quot;scroll&quot; scroll-with-animation=&quot;true&quot;&gt; &lt;view class=&quot;list&quot; wx:for=&quot;&#123;&#123;goodslist&#125;&#125;&quot;&gt; &lt;view class=&quot;title flex a-center&quot;&gt; &lt;view class=&quot;name&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;/view&gt; &lt;view class=&quot;liner&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;item flex&quot; wx:for=&quot;&#123;&#123;item.goods&#125;&#125;&quot; wx:for-item=&quot;goods&quot; data-index=&quot;index&quot;&gt; &lt;view class=&quot;pic&quot;&gt; &lt;image src=&quot;&#123;&#123;goods.img&#125;&#125;&quot;&gt;&lt;/image&gt; &lt;view class=&quot;botton-right&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;shoplist padding10&quot;&gt; &lt;view class=&quot;name&quot;&gt;&#123;&#123;goods.name&#125;&#125;&lt;/view&gt; &lt;view class=&quot;e-name&quot;&gt;&#123;&#123;goods.enname&#125;&#125;&lt;/view&gt; &lt;view class=&quot;price&quot;&gt;¥ &#123;&#123;goods.minprice&#125;&#125;&lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;add-plus iconfont icon-add&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;/scroll-view&gt;&lt;/view&gt; buy.wxss123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188@import &quot;/assets/fonts/iconfont.wxss&quot;;.flex &#123; display: flex;&#125;.a-center &#123; align-items: center;&#125;.padding10 &#123; padding: 10rpx;&#125;.header &#123; display: flex; align-items: center; padding: 20rpx; justify-content: space-between; flex: 0 0 122rpx;&#125;.position &#123; display: flex; align-items: center;&#125;.iconfont &#123; font-size: 40rpx;&#125;.location &#123; margin-left: 20rpx;&#125;.location .mi &#123; color: #999; font-size: 28rpx;&#125;.switch &#123; overflow: hidden; border: 1px solid #78aaca; border-radius: 40rpx; display: flex; font-size: 26rpx; padding: 5rpx; width: 220rpx; align-items: center; justify-content: space-between;&#125;.switch view &#123; flex: 1; text-align: center; color: #78aaca;&#125;.switch view.active &#123; background: #78aaca; color: #fff; width: 110rpx; height: 70rpx; line-height: 70rpx; border-radius: 35rpx;&#125;.banner, .banner image &#123; width: 100vw; height: 280rpx;&#125;/* menu */.container &#123; display: flex; /* scroll-view */ height: calc(100vh - 405rpx); font-size: 30rpx;&#125;.container .menu-left &#123; flex: 0 0 200rpx; width: 200rpx; background: #f6f6f6;&#125;.container .menu-left .menu-left-buy &#123; padding: 32rpx 20rpx; text-align: center; border-left: 10rpx solid transparent; position: relative;&#125;.tip &#123; position: absolute; top: 0; right: 0; background: orangered; font-size: 22rpx; padding: 0 10rpx; color: #fff;&#125;.container .menu-left .menu-left-buy.active &#123; background: #fff; color: #7ba9cd; border-left: 10rpx solid #7ba9cd;&#125;.container .menu-right &#123; flex: 1; padding: 20rpx 0 20rpx 20rpx;&#125;.list .title&#123; padding: 15rpx 0 ;&#125;.list .title .name &#123; padding: 10rpx 15rpx 10rpx 0; font-size: 35rpx;&#125;.list .title .liner &#123; height: 1px; background: #ccc; flex: 1;&#125;.list .item &#123; padding: 20rpx 20rpx 0 0&#125;.list .item .pic &#123; flex: 0 0 100rpx; width: 150rpx; height: 150rpx; position: relative;&#125;.list .item .pic image &#123; width: 150rpx; height: 150rpx; border-radius: 10rpx;&#125;.bottom-right&#123; position: absolute; bottom: 0; right: 0; background: orangered; font-size: 22rpx; padding: 0 10rpx; color: #fff;&#125;.list .item&#123; position: relative;&#125;.list .item .shoplist &#123; flex: 1; margin-left: 10rpx;&#125;.list .item .shoplist&#123;&#125;.list .item .shoplist .name&#123; font-size: 35rpx; font-weight: bold; line-height: 35rpx;&#125;.list .item .shoplist .e-name&#123; font-size: 25rpx; color: #ccc; margin: 10rpx 0 20rpx 0;&#125;.list .item .shoplist .price&#123; font-size: 35rpx; font-weight: bold;&#125;.list .item .add-plus&#123; position: absolute; bottom: 10rpx ; right: 10rpx; color: #78aacc; font-size: 52rpx; &#125; buy.jsconst $ = require(&apos;../../utils/ajax.js&apos;)//声明全局变量let proListToTop = [], menuToTop = [], MENU = 0, windowHeight, timeoutId;// MENU ==&gt; 是否为点击左侧进行滚动的，如果是，则不需要再次设置左侧的激活状态Page(&#123; data: &#123; myaddress: &#123; name: &apos;北京师范大学昌平店&apos;, distance: 0, &#125;, isZiti: true, // 点击切换自提 外卖 activeType: 0, //左侧 激活index menulist:[], goodslist:[] &#125;, onLoad: function(options) &#123; this._leftAjax() this._goodslist() // 确保页面数据已经刷新完毕~ setTimeout(() =&gt; &#123; this.getAllRects() &#125;, 20) // 地图api wx.getLocation(&#123; type: &apos;gcj02&apos;, altitude: true, success: res =&gt; &#123; // 可以得到自己现在的位置 /* wx.request(&#123; url: &apos;https://apis.map.qq.com/ws/geocoder/v1/&apos;, data: &#123; location: `$&#123;res.latitude&#125;,$&#123;res.longitude&#125;`, key: &quot;2TDBZ-DTK3X-MO64M-7GQWJ-QUJBS-EPBZ5&quot; &#125;, success: ress =&gt; &#123; this.setData(&#123; myaddress: ress.data.result.address &#125;) &#125; &#125;) */ wx.request(&#123; // 实际中是后台java 也调取这个接口,因为我们只能在一个小程序中配置一个 request 合法域名 ,这里我们只做测试使用 url: &apos;https://apis.map.qq.com/ws/geocoder/v1/&apos;, data: &#123; address: `北京师范大学昌平店`, key: &quot;2TDBZ-DTK3X-MO64M-7GQWJ-QUJBS-EPBZ5&quot; // 对方位置 &#125;, success: result =&gt; &#123; // console.log(res.latitude) wx.request(&#123; url: &apos;https://apis.map.qq.com/ws/distance/v1/&apos;, // 计算位置 data: &#123; mode: &apos;walking&apos;, from: `$&#123;res.latitude&#125;,$&#123;res.longitude&#125;`, to: `$&#123;result.data.result.location.lat&#125;,$&#123;result.data.result.location.lng&#125;`, key: &quot;2TDBZ-DTK3X-MO64M-7GQWJ-QUJBS-EPBZ5&quot; &#125;, success: res =&gt; &#123; // console.log(res.data.result.elements[0].distance) this.data.myaddress.distance = res.data.result.elements[0].distance this.setData(&#123; myaddress: this.data.myaddress &#125;) &#125; &#125;) &#125; &#125;) // console.log(res.latitude, res.longitude) // 该做比较了 &#125; &#125;) /* // 取得对方位置经纬度 var mendian = [&#123; text: &quot;北京师范大学昌平店&quot; &#125;,&#123; text: &quot;北京沙河地铁站&quot; &#125;,&#123; text: &quot;北京能源东路&quot; &#125;] var pro = new Promise((resolve, rejest) =&gt; &#123; var count = 0 mendian.forEach(r =&gt; &#123; wx.request(&#123; url: &apos;https://apis.map.qq.com/ws/geocoder/v1/&apos;, data: &#123; address:r.text, key: &quot;2TDBZ-DTK3X-MO64M-7GQWJ-QUJBS-EPBZ5&quot; // 对方位置 &#125;, success: res =&gt; &#123; r.location = res.data.result.location console.log(r.location) if (++count === 3) resolve() &#125; &#125;) &#125;) &#125;) // 距离计算 1 对 多 pro.then(res =&gt; &#123; var locations = mendian.map(r =&gt; &#123; return r.location.lat + &quot;,&quot; + r.location.lng &#125;) // console.log(locations.join(&apos;;&apos;)) // 得到字符串数组 wx.getLocation(&#123; type: &apos;gcj02&apos;, success: function (res) &#123; // 可以得到自己现在的位置 console.log(res.latitude, res.longitude) // 得到经纬度 wx.request(&#123; url: &apos;https://apis.map.qq.com/ws/geocoder/v1/&apos;, data: &#123; from: `$&#123;res.latitude&#125;,$&#123;res.longitude&#125;`, to: locations.join(&apos;;&apos;), key:&quot;2TDBZ-DTK3X-MO64M-7GQWJ-QUJBS-EPBZ5&quot; &#125;, success: res =&gt; &#123; // mendian = mendian.map((r, i) =&gt; &#123; // return &#123; // address: r.text, // distance: res.data.result.elements[i].distance // &#125; // &#125;) console.log(res) &#125; &#125;) &#125; &#125;) &#125;) */ &#125;, // 点击地址 changelocation() &#123; wx.chooseLocation(&#123; success: res =&gt; &#123; console.log(res) this.data.myaddress.name = res.name this.setData(&#123; myaddress: this.data.myaddress &#125;) &#125;, &#125;) &#125;, // 点击切换自提 外卖 changwuliutype(e) &#123; this.setData(&#123; isZiti: !this.data.isZiti &#125;) &#125;, // 左侧 active 激活样式 index切换 changtype(e) &#123; console.log(e) if (Number(e.target.id)===this.data.activeType) return MENU = 1 this.setData(&#123; activeType: Number(e.target.id), rightProTop: proListToTop[Number(e.target.id)] &#125;) this.setMenuAnimation(Number(e.target.id)) &#125;, // ajax 左侧数据 _leftAjax() &#123; $.ajax(&quot;/menulist&quot;).then(res =&gt; &#123; console.log(res) this.setData(&#123; menulist: res.data.menulist &#125;) &#125;) &#125;, // goods 数据 _goodslist()&#123; $.ajax(&quot;/goodslist&quot;).then(res=&gt;&#123; console.log(res.data.goodslist[0].goods[0].name) this.setData(&#123; goodslist:res.data.goodslist &#125;) &#125;) &#125;, // 右侧滚动时触发 // 100 200 300 400 600 700 900 proListToTop // 704 scroll(e)&#123; console.log(e) for (let i = 0; i &lt; proListToTop.length;i++)&#123; if (e.detail.scrollTop &lt; proListToTop[i] &amp;&amp; i !== 0 &amp;&amp; e.detail.scrollTop &gt; proListToTop[i - 1]) &#123; return this.setDis(i) &#125; &#125; // 找不到匹配项，默认显示第一个数据 if(!MENU)&#123; this.setData(&#123; activeType: 0 &#125;) &#125; MENU = 0 &#125;, // 设置左侧 menu 栏滑动的选中状态 setDis(i)&#123; if (i !== this.data.activeType + 1 &amp;&amp; !MENU)&#123; this.setData(&#123; activeType:i - 1 &#125;) &#125; MENU = 0 this.setMenuAnimation(i) &#125;, setMenuAnimation(i) &#123; // 设置动画，使menu滚动到指定位置。 let self = this console.log(33) if (menuToTop[i].animate) &#123; console.log(11111) // 节流操作 if (timeoutId) &#123; clearTimeout(timeoutId) &#125; timeoutId = setTimeout(() =&gt; &#123; console.log(12138) self.setData(&#123; leftMenuTop: (menuToTop[i].top - windowHeight) &#125;) &#125;, 50) &#125; else &#123; console.log(11) if (this.data.leftMenuTop === 0) return console.log(22) this.setData(&#123; leftMenuTop: 0 &#125;) &#125; &#125;, getActiveReacts() &#123; wx.createSelectorQuery().selectAll(&apos;.active&apos;).boundingClientRect(function (rects) &#123; return rects[0].top &#125;).exec() &#125;, //获取 左 右 位置信息 getAllRects()&#123; // 获取商品数组的位置信息 wx.createSelectorQuery().selectAll(&apos;.list&apos;).boundingClientRect(function (rects) &#123; rects.forEach(function (rect)&#123; // console.log(rect) 获得右侧每个的单个信息 proListToTop.push(rect.top - 220) // console.log(proListToTop[2]) 经过验证,此时prolListToTop是一个关于位置的数组,需要通过 pro[i]的形式 i就是左边的 id 点击左面id的时候 将值传给 pro[i] &#125;) &#125;).exec() // 获取左侧数组的位置信息 wx.createSelectorQuery().selectAll(&apos;.menu-left-buy&apos;).boundingClientRect(function (rects)&#123; wx.getSystemInfo(&#123; success: function (res) &#123; windowHeight = res.windowHeight / 2 rects.forEach(function (rect) &#123; menuToTop.push(&#123; top: rect.top, animate: rect.top &gt; windowHeight &#125;) &#125;) &#125;, &#125;) &#125;).exec() &#125;, // 获取系统的高度信息 getSystemInfo() &#123; let self = this wx.getSystemInfo(&#123; success: function (res) &#123; windowHeight = res.windowHeight / 2 &#125; &#125;) &#125; &#125;) utils&gt;ajax.jsconst debug = true // debug = 开发模式const baseUrl = &quot;http://baidu.com&quot;const Mock = require(&apos;./mock-min.js&apos;)var ajax = (url) =&gt; &#123; wx.showLoading(&#123; title: &apos;加载中&apos;, &#125;) return new Promise(function(s, f) &#123; // s代表成功 f代表失败 if (debug) &#123; //mock switch (url) &#123; // home 最上方列表数据 case &quot;/menulist&quot;: var data = Mock.mock(&#123; &quot;menulist&quot;: [&#123; id: 0, name: &quot;人气Top&quot; &#125;, &#123; id: 1, name: &quot;大师咖啡&quot; &#125;, &#123; id: 2, name: &quot;瑞纳冰&quot; &#125;, &#123; id: 3, name: &quot;鲜榨果蔬汁&quot;, &#125;, &#123; id: 4, name: &quot;经典饮品&quot;, tip: &quot;&quot; &#125;, &#123; id: 5, name: &quot;BOSS午餐&quot;, tip: &quot;66折优惠&quot; &#125;, &#123; id: 6, name: &quot;健康轻食&quot;, tip: &quot;汤唯最爱&quot; &#125;, &#123; id: 7, name: &quot;健康轻食&quot;, &#125;, &#123; id: 8, name: &quot;健康轻食&quot;, &#125;, &#123; id: 9, name: &quot;健康轻食&quot;, &#125;, &#123; id: 10, name: &quot;健康轻食&quot;, &#125;, ], &#125;) s(&#123; data &#125;) break case &quot;/goodslist&quot;: var data = Mock.mock(&#123; &quot;goodslist&quot;: [&#123; id: 0, title: &quot;人气Top&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 1, title: &quot;大师咖啡&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 2, title: &quot;瑞纳冰&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 3, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 4, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 5, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 6, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 7, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 8, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 9, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125;, &#123; id: 10, title: &quot;鲜榨果蔬汁&quot;, goods: [&#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 27 &#125;, &#123; img: &quot;https://ss0.bdstatic.com/6Ox1bjeh1BF3odCf/it/u=3832856818,1879136980&amp;fm=74&amp;app=80&amp;f=JPEG&amp;size=f121,121?sec=1880279984&amp;t=03eeda65b053c985c714c2d161ee25b0&quot;, name: &quot;焦糖玛奇朵6&quot;, enname: &quot;Caramel Macchiato&quot;, minprice: 26 &#125; ] &#125; ], &#125;) s(&#123; data &#125;) break &#125; wx.hideLoading() &#125; else &#123; //真实 request 请求 wx.request(&#123; url: baseUrl + url, success: function(res) &#123; s(res) &#125; &#125;) &#125; &#125;)&#125;module.exports = &#123; ajax&#125; utils&gt;mock-min.jsmock-min.js下载地址 进入链接,右键另存为即可使用,放入 utils 下]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序左右联动菜单(即可左联动,也可右联动)]]></title>
    <url>%2F2019%2F10%2F16%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B7%A6%E5%8F%B3%E8%81%94%E5%8A%A8%E8%8F%9C%E5%8D%95-%E5%8D%B3%E5%8F%AF%E5%B7%A6%E8%81%94%E5%8A%A8-%E4%B9%9F%E5%8F%AF%E5%8F%B3%E8%81%94%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[左侧是商品列表名称,通过点击左侧不同 index ,右侧出现不同 index 对应的 goods列表同时右侧进行滑动,左侧也可以跳转到不同的激活样式 .wxml12345678910111213141516171819202122232425&lt;!-- 搜索 --&gt;&lt;view class=&quot;search&quot;&gt;&lt;input class=&quot;search-box&quot; placeholder=&apos;痘研商城&apos; bindtap=&apos;goodsName&apos;&gt;&lt;/input&gt;&lt;image src=&quot;&#123;&#123;staticImg&#125;&#125;index/iconSearch.png&quot; class=&apos;question-mark&apos;&gt;&lt;/image&gt;&lt;/view&gt;&lt;!-- 左侧导航 --&gt;&lt;view class=&apos;tui-fixed-left&apos;&gt;&lt;scroll-view class=&apos;tui-city-scroll&apos; scroll-x=&quot;true&quot; scroll-y=&quot;true&quot; style=&apos;height:92%;&apos; scroll-with-animation=&quot;true&quot; scroll-top=&quot;&#123;&#123;leftMenuTop&#125;&#125;&quot;&gt;&lt;text class=&quot;menu-item &#123;&#123;index === currentActiveIndex ? &apos;menu-active&apos; : &apos;&apos;&#125;&#125;&quot; wx:for=&quot;&#123;&#123;navList&#125;&#125;&quot; wx:key=&quot;unique&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; id=&apos;&#123;&#123;index&#125;&#125;&apos; catchtap=&apos;changeMenu&apos;&gt;&#123;&#123;item.c_name&#125;&#125;&lt;/text&gt;&lt;/scroll-view&gt;&lt;/view&gt;&lt;!-- 右侧滚动商品 --&gt;&lt;view class=&apos;content&apos;&gt;&lt;scroll-view class=&apos;tui-city-scroll-y&apos; scroll-y=&quot;true&quot; style=&apos;height:92%;&apos; scroll-with-animation=&quot;true&quot; scroll-top=&quot;&#123;&#123;rightProTop&#125;&#125;&quot; bindscroll=&quot;scroll&quot;&gt;&lt;view class=&apos;pro-item&apos; wx:for=&quot;&#123;&#123;navList&#125;&#125;&quot; wx:key=&quot;unique&quot;&gt;&lt;view class=&apos;tui-list-head&apos; id=&apos;NAV&#123;&#123;index&#125;&#125;&apos;&gt;&#123;&#123;item.c_name&#125;&#125;&lt;/view&gt;&lt;view class=&apos;tui-list-li&apos;&gt;&lt;view class=&apos;goods-box&apos; wx:for-item=&apos;items&apos; wx:for=&quot;&#123;&#123;item.list&#125;&#125;&quot; wx:key=&quot;unique&quot; &gt;&lt;image class=&apos;goodsImg&apos; src=&apos;&#123;&#123;items.url&#125;&#125;&apos;&gt;&lt;/image&gt;&lt;view class=&apos;goodsName&apos;&gt;&#123;&#123;items.goodsName&#125;&#125;&lt;/view&gt;&lt;/view&gt;&lt;/view&gt;&lt;/view&gt;&lt;/scroll-view&gt;&lt;/view&gt; .wxss123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131page&#123;font-family: &quot;微软雅黑&quot;;background-color:#f0f0f0;&#125;.search&#123;width:100%;height:88rpx;background-color:#5196ff;box-sizing: border-box;padding-top:18rpx;position: fixed;left: 0;top: 0;&#125;.search-box&#123;width:690rpx;height:57rpx;margin-left:30rpx;background-color:#fff;box-sizing: border-box;padding-left: 60rpx;border-radius: 57rpx;font-size: 26rpx;&#125;.question-mark&#123;width:30rpx;height:30rpx;position: absolute;left:45rpx;top:30rpx;&#125;.tui-fixed-x&#123;/* margin-left: 130px; */position: fixed;top: 89rpx;left: 0;&#125;.tui-fixed-left&#123;width: 180rpx;height: 100%;border-right: 1px solid #dfdfdf;position: fixed;background-color:#f5f5f5;top: 89rpx;left: 0;&#125;.tui-list-head&#123;height:65rpx;line-height: 65rpx;&#125;.tui-city-scroll&#123;width: 100%;&#125;.menu-item&#123;font-size: 26rpx;box-sizing: border-box;height: 100rpx;line-height: 100rpx;width: 180rpx;background-color:#fff;display: block;border-bottom: 1px solid #dfdfdf;position: relative;z-index: 10;text-align: center;&#125;.menu-active&#123;border-left:10rpx solid #5196ff;background-color:#f0f0f0;&#125;.content&#123;width:570rpx;box-sizing: border-box;padding-left: 20rpx;padding-right: 20rpx;height: 100%;position: fixed;top: 89rpx;right: 0;&#125;.tui-city-scroll-y&#123;height: 100%;box-sizing: border-box;&#125;.tui-list-head&#123;height: 65rpx;line-height: 65rpx;font-size: 28rpx;font-weight: 700;&#125;.tui-list-li&#123;background-color:#fff;/* height: 400px; */overflow: hidden;color: #fff;font-size: 50rpx;box-sizing: border-box;padding:20rpx 0 0 0;&#125;.goods-box&#123;width:170rpx;/* height: 100rpx;background: #c00; */overflow: hidden;margin-right:10rpx;/* margin-bottom: 10rpx; */float:left;&#125;.tui-list-li .goods-box:nth-child(3n)&#123;margin-right:0rpx;&#125;.goodsImg&#123;display: block;width:100rpx;height: 100rpx;margin:0 auto;margin-bottom: 15rpx;&#125;.goodsName&#123;width:100%;overflow: hidden;box-sizing: border-box;height: 42rpx;line-height: 42rpx;text-align: center;font-size: 24rpx;text-overflow: ellipsis;white-space: nowrap;color: #333;margin-bottom: 20rpx;&#125; .jsvar app = getApp();//声明全局变量let proListToTop = [], menuToTop = [], MENU = 0, windowHeight, timeoutId;// MENU ==&gt; 是否为点击左侧进行滚动的，如果是，则不需要再次设置左侧的激活状态Page(&#123; data: &#123; staticImg: app.globalData.staticImg, currentActiveIndex: 0, // 接口返回的商品数组 navList:[ &#123; c_id: "01", c_name:'电脑办公', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "02", c_name: '祛痘', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "02", c_name: '化妆品', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "03", c_name: '口红', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "04", c_name: '包包', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "05", c_name: '面膜', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "06", c_name: '精华乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "07", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "08", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "09", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "10", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "11", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "12", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "13", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "14", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "07", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, &#123; c_id: "07", c_name: '洁面乳', list: [ &#123; id: 1, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 2, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 3, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 4, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, &#123; id: 5, url: 'https://resource.yirenheju.cn/wechat/index/err.png', goodsName: '玩具', &#125;, ] &#125;, ], &#125;, onLoad: function (e) &#123; // 确保页面数据已经刷新完毕~ setTimeout(() =&gt; &#123; this.getAllRects() &#125;, 20) &#125;, changeMenu(e) &#123; console.log(proListToTop); // 改变左侧tab栏操作 if (Number(e.target.id) === this.data.currentActiveIndex) return MENU = 1 this.setData(&#123; currentActiveIndex: Number(e.target.id), rightProTop: proListToTop[Number(e.target.id)] &#125;) this.setMenuAnimation(Number(e.target.id)) &#125;, scroll(e) &#123; console.log(e); for (let i = 0; i &lt; proListToTop.length; i++) &#123; if (e.detail.scrollTop &lt; proListToTop[i] &amp;&amp; i !== 0 &amp;&amp; e.detail.scrollTop &gt; proListToTop[i - 1]) &#123; return this.setDis(i) &#125; &#125; // 找不到匹配项，默认显示第一个数据 if (!MENU) &#123; this.setData(&#123; currentActiveIndex: 0 &#125;) &#125; MENU = 0 &#125;, setDis(i) &#123; // 设置左侧menu栏的选中状态 if (i !== this.data.currentActiveIndex + 1 &amp;&amp; !MENU) &#123; this.setData(&#123; currentActiveIndex: i - 1 &#125;) &#125; MENU = 0 this.setMenuAnimation(i) &#125;, setMenuAnimation(i) &#123; // 设置动画，使menu滚动到指定位置。 let self = this console.log(33) if (menuToTop[i].animate) &#123; console.log(11111) // 节流操作 if (timeoutId) &#123; clearTimeout(timeoutId) &#125; timeoutId = setTimeout(() =&gt; &#123; console.log(12138) self.setData(&#123; leftMenuTop: (menuToTop[i].top - windowHeight ) &#125;) &#125;, 50) &#125; else &#123; console.log(11) if (this.data.leftMenuTop === 0) return console.log(22) this.setData(&#123; leftMenuTop: 0 &#125;) &#125; &#125;, getActiveReacts() &#123; wx.createSelectorQuery().selectAll('.menu-active').boundingClientRect(function (rects) &#123; return rects[0].top &#125;).exec() &#125;, getAllRects() &#123; // 获取商品数组的位置信息 wx.createSelectorQuery().selectAll('.pro-item').boundingClientRect(function (rects) &#123; rects.forEach(function (rect) &#123; console.log(rect) // 这里减去44是根据你的滚动区域距离头部的高度，如果没有高度，可以将其删去 proListToTop.push(rect.top - 44) &#125;) &#125;).exec() // 获取menu数组的位置信息 wx.createSelectorQuery().selectAll('.menu-item').boundingClientRect(function (rects) &#123; wx.getSystemInfo(&#123; success: function (res) &#123; console.log(res); windowHeight = res.windowHeight / 2 // console.log(windowHeight) rects.forEach(function (rect) &#123; menuToTop.push(&#123; top: rect.top, animate: rect.top &gt; windowHeight &#125;) &#125;) &#125; &#125;) &#125;).exec() &#125;, // 获取系统的高度信息 getSystemInfo() &#123; let self = this wx.getSystemInfo(&#123; success: function (res) &#123; windowHeight = res.windowHeight / 2 &#125; &#125;) &#125; &#125;)]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[函数的作用域 数组 字符串]]></title>
    <url>%2F2019%2F09%2F29%2F%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F-%E6%95%B0%E7%BB%84-%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[javascript 关于数组 字符串的简单操作 需时常默记 函数的作用域 / 变量的作用域：变量作用的范围 全局作用域 (全局变量)执行完函数，里面的内存不会清空 函数作用域 (局部作用域)局部变量函数执行完，里面的变量就都清空了； 临时变量只用一次在函数执行是开辟空间，执行完就释放掉了 数组一组相关的数据PS： var months =[1,2,3,4,5,6,7,8,9,10,11,12] var months = new Array; 元素 元素下标 在数组中 标识；下标 从0开始访问 变量名字 数组的长度 数组中元素的个数 // 谈到对象 就有属性和方法 数组元素的 增删改查length array.length push 在数组中最后追加一个元素。 推 ，放 array.push(&quot;!&quot;) pop 删除最后一个数组元素 array.pop shift 删除第一个数组元素 array.shift unshift 插入到第一个数组元素 array.unshift(&quot;!&quot;) 详细介绍:中间位置 移除 / 添加splice(起始位置，元素的个数) 删除 第一个参数是从哪个位置开始 (开始删) ，第二个参数是删除的个数 splice(3,3) 从第3个位置开始，删除包括3开始的3个数 splice(array.length-1,1) 删除倒数第一个 中间用逗号隔开，例如 splice(1,2); splice(插入元素起始位置，0，[插入元素]) 插入 bbb.array(1,2,&quot;charu&quot;); 上面的这里：1表示当前插入的位置是1 2表示删除包含位置1的2个数 charu 表示在位置1插入”charu” 继续“查询 ”console.log(month[3]);下标查询 一段数据的查询： slice 都是位置arr.slice(起始位置，结束位置-1)arr.slice(3,8) 3-8的数组元素 返回结果还是一个数组。 返回下标为3，到8，但是不包含8的数组元素 slice (1,1); 查询1开始 查询第一个位置的 join (“-“); 用 - 连接数据 / 即转变成字符串 var result=months.slice(3.6); 返回一段数据的结果 3位置 到 6位置-1 var result=months.join(“-“) 用”-“让数组进行连接 reverse();反转 months.reverse() 字符串才可以进行反转哦! toString(); 用逗号继续连接各个数组 逻辑值转换为字符串 并返回结果； concat(); 用于返回 连接两个或多个数组 arrayObject.concat(arrayX,arrayX) arrayX可以是具体的值 也可以是数组对象 var a = [1,2,3]; a.concat(4,5); 输出结果是 1,2,3,4,5 1234var a=[1,2];var b=[3,4]; var e=["sd","ef","jk"]var c=a.concat(b,e) sort(0) 排序 比较大小 升序； (O_o)??↓ 降序 12345678var j=[1,2,3,4];j.sort();j.sort.reverse() //达成降序效果 或者j.sort(function(a,b)&#123; return b-a;&#125;) 字符串 String“abc”. 加点以后是 字符串对象 不是单纯的字符串了哦~ ####### 属性:length 包含字符的个数 abc.length ####### 方法: new string() 定义一个新的字符串 charAt 字符串也是从0开始的 aa.charAt(index) index 必需。表示字符串中某个位置的数字，即字符在字符串中的下标。 返回单个的元素值 concat 连接字符串 但是不影响原字符串 var result3=str+1; //连接作用 indexOf() 检索字符串。返回值 -1：未检索到； 0 ：第一位开始 indexOf(“检索当前内容是否在字符串中存在”) replace() 替换位置； 里面两个参数 search() 检索与正则表达式相匹配的值 slice(start,end) 提取字符串的片段，并在新的字符串中返回被提取的部分 split() 把字符串分割为字符串数组 括号内填写 需要用哪个符号来分开； 1234var str1="a1b1c1d1e";str1.split("1");输出： ["a","b","c"] 1234var str2="abcdef";str2.split("");输出： ["a","b","c","d","e","f"] substr() 从起始索引号提取字符串中指定数目的字符 str.substr(4,5); 从位置4开始，提取 1 2 3 4 5， 并返回一个新的字符串 但是不改变原字符串 str.substr(4) 从位置4开始 返回截止末位所有的字符 substring() 提取字符串中两个指定的索引号之间的字符 str.substring(4,6) 和slice 同理 都是end位置 -1； 需要查找 slice , substr , substring 的区别]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序 mock 封装记录]]></title>
    <url>%2F2019%2F09%2F27%2F%E5%B0%8F%E7%A8%8B%E5%BA%8F-mock-%E5%B0%81%E8%A3%85%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[1.本地创建 mock 数据2.使用 easy-mock 创建线上假数据并使用 一.本地创建 mock 数据 1.在 utils 下,创建 ajax.js ,即可在本地创建 mock 假数据, 如果要进行真数据开发,将 debug 设置为 false1234567891011121314151617181920212223242526272829303132333435363738394041const debug = true // debug = 开发模式const baseUrl = "http://baidu.com"const Mock = require('./mock-min.js')var ajax = (url) =&gt; &#123; wx.showLoading(&#123; title: '加载中', &#125;) return new Promise(function (s, f) &#123; // s代表成功 f代表失败 if (debug) &#123; //mock switch (url) &#123; // 三排商品数据 case "/user": var data = Mock.mock(&#123; "userlist|15":[ &#123; "subid|+1":1101, "img":"http://oano.cn/mockimg/31.png", "title":"@ctitle(2,4)" &#125; ] &#125;) s(&#123; data &#125;) break &#125; // 数据加载出来后,将数据隐藏 wx.hideLoading() &#125; else &#123; //真实 request 请求 wx.request(&#123; url: baseUrl + url, success: function (res) &#123; s(res) &#125; &#125;) &#125; &#125;)&#125;module.exports = &#123; ajax&#125; 2.其他页面可以直接调用 例如在 home/js 中1const $ = require('../../utils/ajax.js') 3.home.js 使用123456$.ajax("/user").then(res =&gt; &#123; // console.log(res.data.advList) this.setData(&#123; pageNames: res.data.userlist &#125;) &#125;) 二.使用 easy-mock 创建数据并使用登录网址 easy-mock 登录地址 1.在 utils 下创建 ajax.js12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061const constant = require('../config/constant.js')const _ = require('../utils/simba.js')var ajax = (url, data, method="get") =&gt; &#123; wx.showLoading(&#123; title: '加载中', &#125;) console.log("请求了"+url,"参数是"+JSON.stringify(data)) return new Promise((success, f) =&gt; &#123; // s代表成功 f代表失败 wx.request(&#123; method, // 通过默认方式,默认是 get data, url: constant.BASE_URL + url, success, complete() &#123; wx.hideLoading() &#125; &#125;) &#125;)&#125; //腾讯 apivar getCityName = (longitude, latitude)=&gt;&#123; return new Promise((res,fail)=&gt;&#123; wx.request(&#123; url: 'https://apis.map.qq.com/ws/geocoder/v1', data: &#123; key: '2TDBZ-DTK3X-MO64M-7GQWJ-QUJBS-EPBZ5', location: latitude + ',' + longitude &#125;, success: result =&gt; &#123; res(result.data.result.address_component) // res = res.data.result.address_component // this.setData(&#123; // city: res.province + res.city + res.district + res.street + res.street_number // &#125;) &#125; &#125;) &#125;)&#125; //百度apivar getCityNameBD = (longitude, latitude) =&gt; &#123; return new Promise((res, fail) =&gt; &#123; wx.request(&#123; url: 'http://api.map.baidu.com/reverse_geocoding/v3', data: &#123; ak: 'krEFk5Dq5eClQGQ3iG12xoSlOvpoHsb0', output: 'json', coordtype: 'wgs84ll', location: latitude + ',' + longitude &#125;, success: result =&gt; &#123; console.log(result) res(result.data.result.addressComponent) &#125; &#125;) &#125;)&#125;module.exports = &#123; ajax, getCityName, getCityNameBD&#125; 2.根目录创建 config 文件夹 并在里创建 constant.js1234567const DEBUG = true // debug = 开发模式const BASE_URL = "https://easy-mock.com/mock/5d887e56c030f85c978d0c1f/leftmenu" // mock网址module.exports = &#123; DEBUG, BASE_URL // 导出&#125; 3.使用 例如在 menu.js 中1const $ = require(&apos;../../utils/ajax.js&apos;) 4. menu.js 中12345$.ajax("/v2/user/logout").then(res =&gt; &#123; this.setData(&#123; typelist: res.data.typelist &#125;) &#125;) 自此, mock 就可以轻松调取了,详细参考 Promise封装 yanpin 两个小程序细节]]></content>
      <categories>
        <category>mock</category>
      </categories>
      <tags>
        <tag>mock</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue.nextTick()方法的使用详解（简单明了）]]></title>
    <url>%2F2019%2F09%2F27%2Fvue-nextTick-%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3%EF%BC%88%E7%AE%80%E5%8D%95%E6%98%8E%E4%BA%86%EF%BC%89%2F</url>
    <content type="text"><![CDATA[简单理解: dom 更新结束之后执行回调, 但是自己却不能进行双向绑定的切换,所以需要执行 this.nextTick() 来进行更新,这里格外要注意 this 指向! 什么是Vue.nextTick()？？ 定义：在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。所以就衍生出了这个获取更新后的DOM的Vue方法。所以放在Vue.nextTick()回调函数中的执行的应该是会对DOM进行操作的 js代码； 理解：nextTick()，是将回调函数延迟在下一次dom更新数据后调用，简单的理解是：当数据更新了，在dom中渲染后，自动执行该函数 12345678910111213141516171819202122232425&lt;template&gt; &lt;div class="hello"&gt; &lt;div&gt; &lt;button id="firstBtn" @click="testClick()" ref="aa"&gt;&#123;&#123;testMsg&#125;&#125;&lt;/button&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt; &lt;script&gt;export default &#123; name: 'HelloWorld', data () &#123; return &#123; testMsg:"原始值", &#125; &#125;, methods:&#123; testClick:function()&#123; let that=this; that.testMsg="修改后的值"; console.log(that.$refs.aa.innerText); //that.$refs.aa获取指定DOM，输出：原始值 &#125; &#125;&#125;&lt;/script&gt; 使用 this.$nextTick() 123456789methods:&#123; testClick:function()&#123; let that=this; that.testMsg="修改后的值"; that.$nextTick(function()&#123; console.log(that.$refs.aa.innerText); //输出：修改后的值 &#125;); &#125;&#125; 注意：Vue 实现响应式并不是数据发生变化之后 DOM 立即变化，而是按一定的策略进行 DOM 的更新。$nextTick 是在下次 DOM 更新循环结束之后执行延迟回调，在修改数据之后使用 $nextTick，则可以在回调中获取更新后的 DOM， 什么时候需要用的Vue.nextTick()？？ 1、Vue生命周期的created()钩子函数进行的DOM操作一定要放在Vue.nextTick()的回调函数中，原因是在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进 Vue.nextTick() 的回调函数中。与之对应的就是mounted钩子函数，因为该钩子函数执行时所有的DOM挂载已完成。 123456created()&#123; let that=this; that.$nextTick(function()&#123; //不使用this.$nextTick()方法会报错 that.$refs.aa.innerHTML="created中更改了按钮内容"; //写入到DOM元素 &#125;);&#125;, 2、当项目中你想在改变DOM元素的数据后基于新的dom做点什么，对新DOM一系列的js操作都需要放进Vue.nextTick()的回调函数中；通俗的理解是：更改数据后当你想立即使用js操作新的视图的时候需要使用它 123456789101112131415161718192021222324252627282930&lt;template&gt; &lt;div class="hello"&gt; &lt;h3 id="h"&gt;&#123;&#123;testMsg&#125;&#125;&lt;/h3&gt; &lt;/div&gt;&lt;/template&gt; &lt;script&gt;export default &#123; name: 'HelloWorld', data () &#123; return &#123; testMsg:"原始值", &#125; &#125;, methods:&#123; changeTxt:function()&#123; let that=this; that.testMsg="修改后的文本值"; //vue数据改变，改变dom结构 let domTxt=document.getElementById('h').innerText; //后续js对dom的操作 console.log(domTxt); //输出可以看到vue数据修改后DOM并没有立即更新，后续的dom都不是最新的 if(domTxt==="原始值")&#123; console.log("文本data被修改后dom内容没立即更新"); &#125;else &#123; console.log("文本data被修改后dom内容被马上更新了"); &#125; &#125;, &#125;&#125;&lt;/script&gt; 正确的用法是：vue改变dom元素结构后使用vue.$nextTick()方法来实现dom数据更新后延迟执行后续代码 1234567891011121314changeTxt:function()&#123; let that=this; that.testMsg=&quot;修改后的文本值&quot;; //修改dom结构 that.$nextTick(function()&#123; //使用vue.$nextTick()方法可以dom数据更新后延迟执行 let domTxt=document.getElementById(&apos;h&apos;).innerText; console.log(domTxt); //输出可以看到vue数据修改后并没有DOM没有立即更新， if(domTxt===&quot;原始值&quot;)&#123; console.log(&quot;文本data被修改后dom内容没立即更新&quot;); &#125;else &#123; console.log(&quot;文本data被修改后dom内容被马上更新了&quot;); &#125; &#125;);&#125;, 3、在使用某个第三方插件时 ，希望在vue生成的某些dom动态发生变化时重新应用该插件，也会用到该方法，这时候就需要在 $nextTick 的回调函数中执行重新应用插件的方法。 Vue.nextTick(callback) 使用原理： 原因是，Vue是异步执行dom更新的，一旦观察到数据变化，Vue就会开启一个队列，然后把在同一个事件循环 (event loop) 当中观察到数据变化的 watcher 推送进这个队列。如果这个watcher被触发多次，只会被推送到队列一次。这种缓冲行为可以有效的去掉重复数据造成的不必要的计算和DOm操作。而在下一个事件循环时，Vue会清空队列，并进行必要的DOM更新。当你设置 vm.someData = ‘new value’，DOM 并不会马上更新，而是在异步队列被清除，也就是下一个事件循环开始时执行更新时才会进行必要的DOM更新。如果此时你想要根据更新的 DOM 状态去做某些事情，就会出现问题。。为了在数据变化之后等待 Vue 完成更新 DOM ，可以在数据变化之后立即使用 Vue.nextTick(callback) 。这样回调函数在 DOM 更新完成后就会调用。]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序学习记录]]></title>
    <url>%2F2019%2F09%2F27%2F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[学习小程序一周记录:截止目前时间,页面排序和简单逻辑已经没有问题,明天开始进行购物车逻辑学习,日常补充 js 基础 现代js 小程序开发框架 — 属性id class style hidden data-* bind* / catch* 数据绑定列表渲染条件渲染模板引用 import 可以引入 template 里的内容include母版代码块外的所有代码都引入 ，相当于拷贝到了我们的 include 的这里 响应式像素 wxss =&gt; 尺寸单位 rpx | 样式导入 | 内联样式 | 选择器 特性样式 外联样式 在 .wxss 中, 通过 @import 引入其他 .！选择器 样式 class .intro #id #firstname element view 选择所有 view 组件 element,element view ,checkbox 选择文档的所有 view组件和checkbox组件 ::after view::after 在 view 后面插入内容 ::before view:;before !important style id .class element wxs 页面生命周期| | || —- | —- ||onLoad | 页面初次加载，微信会派发 onLoad事件 ||onShow | 一般我们是在 onLoad 和 onShow 里请求我们的服务器数据||onReady | 从服务器拿到的数据已经回来了，||onHide ||onUnload | 页面路由 所有的页面全部由框架进行管理，框架以栈的形式，维护了我们的小程序页面 路由方式： 初始化(新页面入栈) 2.打开新页面(新页面入栈)调用APIwx. navigateTo 或使用组件 3.页面重定向当前页面出栈，新页面入栈， 调用API wx.redirectTo 或使用组件 4.页面返回页面不断出栈，直到页面目标返回页，新页面入栈调用API wx.navigateBack 或使用组件 或左上角按钮 5.Tab切换页面全部出栈，只留下新的Tab页面调用API wx.switchTab 或使用组件 6.重加载页面全部出栈，只留下新的页面调用API wx.reLaunch 或使用组件 事件bindtap 基础知识:冒泡事件 如何实现 view容器组件是视图层的基本组成单元 组件自带一些功能与微信风格的样式 一个组件通常包括:开始标签和结束标签,属性用来修饰这个组件,内容在两个标签之内视图容器,媒体组件,地图,开放能力,画布,基础内容,表单组件,导航 view scroll-view swiper movable-view cover-view 滚动容器组件 轮播组件 可支持移动和缩放的组件 可以盖住原生组件 wx:for列表渲染中的 wx:key =” this “ 代表我们当前元素,this 的使用只能是字符串或者数字的元素的数组 四种基本元素组件: icon 官方图标 text \n 换行 selectable rich-text 富文本 progress 进度条 表单组件 button 按钮 default mini checkbox 多选框 form 表单 input 输入框 label 标签 与表单控件,关联在一起, picker 选择控件 - 主动触发,从底部弹起来 的滚动选择器[类似选择地区] picker-view 嵌在页面内的选择控件 radio 单选 switch 开关 text-area 多行文本框 12345bindfn:function()&#123;if(e.detail.value=='123')&#123;wx.hideKeyboard( ) &#125;&#125; 如果是一个 checkbox 的时候我们可以通过修改 swith的type =”checkbox” , 可以绑定 change 事件 媒体组件 - 以下都没有看: https://www.bilibili.com/video/av23470615/?p=51| 媒体组件 | || —- | —- || audio | 音频组件 ||camera |相机组件||image |图片组件||video |视频组件||live-player| 实时播放组件||live-pusher | 实时录制组件| 微信APIwx.on 监听我们某个api事件的接口Object参数 success成功 fail失败 complete完成()不论失败与否wx.get/wx.set 直调函数:指在我们程序运行的时候,立即运行的一个被调函数回调函数:在程序运行之后,回头再去执行的被调函数 网络请求wx.request 实例中 点击删除,删除下标对应的整个元素, 需要先绑定下标, 使用 data-id = this.data.items.splice(e.currentTarget.dataset.id,1) 即可 4 5 讲中 simba.js 关于一些原生 JS 的扩展和实现 ,可以参考 [https://gitee.com/shendusimba/simbajs] mock.min.js 关于生成假数据方便调用 使用 easy-mock 封装 mock开发环境或者 线上调用接口的js 并使用promise优化,将异步操作,由嵌套转变为链式 6 7 8 讲中 swiper 1. 做轮播图 2. 做滑动切换的效果 [t_swiper] v:if=”false“ 通过点击控制 为true 或者 true tabBar底部菜单切换 使用 iconfont png图标需要在 app.json 中进行配置 跳转路由使用 wx.swithTab 11 12 讲扫一扫是为了更快捷的操作通过大分类加载二级分类及商品的逻辑测试图片地址:http://oano.cn/mockimg/1.webp 白天任务,1.switch 代表多个if进行判断 o 练习:https://zh.javascript.info/switch2.查询forEach 学习 o3.抽空巩固js基础 数组 字符串等 = 晚上整 {item.price.toFixed(2)} //保留两位小数 parseInt( ) // 转变成数字 var arr = [1,2,3,4,5,5,5,4,3,2,2,22,2,] console.log(arr.slice(0,6)) concat() stringify() 获取位置,选择当前位置,用到 api 的位置 百度,高德开启服务api,可以快速通过 key,经,纬度来进行快速获取 早上来了继续看13 第34分钟 早上来了继续看16 第34分钟 第17集 抽空看 并应用于自己的小程序里https://www.bilibili.com/video/av56813745 抽空将 simba 课程的标题进行记录]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序 解决 view 文字 过多 溢出的问题，超过行数后隐藏显示省略号]]></title>
    <url>%2F2019%2F09%2F27%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%A7%A3%E5%86%B3-view-%E6%96%87%E5%AD%97-%E8%BF%87%E5%A4%9A-%E6%BA%A2%E5%87%BA%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E8%B6%85%E8%BF%87%E8%A1%8C%E6%95%B0%E5%90%8E%E9%9A%90%E8%97%8F%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[溢出隐藏溢出并使用… 多行文本 1234567891011.note_item text &#123; display: -webkit-box; font-size: 28rpx; color: #000000; line-height: 40rpx; word-break: break-all; -webkit-box-orient: vertical; -webkit-line-clamp: 3; overflow: hidden; text-overflow: ellipsis;&#125; 单行文本 12345678910.note2_item text &#123; display: block; font-size: 28rpx; color: #000000; line-height: 40rpx; height: 120rpx; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;&#125; tip:必须要有宽度]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序样式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序中修改checkbox的样式]]></title>
    <url>%2F2019%2F09%2F27%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BF%AE%E6%94%B9checkbox%E7%9A%84%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[详细列出 checkbox 默认属性 效果图 1,wxml 代码12345&lt;checkbox-group&gt; &lt;label&gt; &lt;checkbox&gt;&lt;/checkbox&gt; &lt;/label&gt;&lt;/checkbox-group&gt; 2,wxss 代码12345678910111213141516171819202122checkbox .wx-checkbox-input &#123; width: 34rpx; height: 34rpx; border-radius: 50%;&#125;/*checkbox选中后样式 */checkbox .wx-checkbox-input.wx-checkbox-input-checked &#123; background: #0394F0; border-color:#0394F0;&#125;/*checkbox选中后图标样式 */checkbox .wx-checkbox-input.wx-checkbox-input-checked::before &#123; width: 20rpx; height: 20rpx; line-height: 20rpx; text-align: center; font-size: 22rpx; color: #fff; background: transparent; transform: translate(-50%, -50%) scale(1); -webkit-transform: translate(-50%, -50%) scale(1);&#125;]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序样式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基本数据类型和引用数据类型的区别]]></title>
    <url>%2F2019%2F06%2F30%2F%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[简单阐述数据类型 1、栈(stack)和堆（heap）Javascript 包含两种不同类型的值：基本类型值 引用类型值； 基本类型值：指的是保存在栈内存的简单数据段。 引用类型值：指的是那些保存在堆内存的对象，意思是：变量中保存的实际上只是一个指针，这个指针指向内存堆中实际的值。 2、基本数据类型5 种常用类型：Number、 String、 Boolean、 Undefined、 Null ，基本数据类型的值是按值访问的，就是说我们可以操作保存在变量中的实际的值 基本数据类型的赋值是简单赋值，是存放在栈内存里的1234var fo = 10;var bar = fo; // 将 fo 的值(10) 赋值给 bar ， bar = 10 。fo = 2; // fo 的值声明为 2console.log(fo, bar); //fo = 2 ,b = 10 图解：从上面我们可以得知，当我改变fo中的数据时，bar中数据没有发生变化。 3、引用数据类型引用数据类型：Object123456var fo = &#123; a: 10 &#125;;var bar = fo; fo.a = 2; console.log(fo.a, bar.a); //fo = 2 ,b = 2 图解： 从上面我们可以得知，当我改变fo中的数据时，bar中数据也发生了变化。当使用fo这个变量时，js解释器会通过bar存放的内存地址，找到内存中的相应地址，将其中的值取出来返回.]]></content>
      <tags>
        <tag>Javascript基础</tag>
      </tags>
  </entry>
</search>
